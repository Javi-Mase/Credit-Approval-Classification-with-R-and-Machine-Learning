clear
clm
crm
c
clean
cln
clr
---
title: "Aprendizaje Computacional Sesión I. Introducción al lenguaje R"
---
title: "Aprendizaje Computacional Sesión I. Introducción al lenguaje R"
install.packages("lattice")
install.packages("lattice")
install.packages("lattice")
install.packages("https://cran.r-project.org/src/contrib/Archive/nutshell.bbdb/nutshell.bbdb_1.0.tar.gz",
repos = NULL, type="source")
install.packages("https://cran.r-project.org/src/contrib/Archive/nutshell.audioscrobbler/nutshell.audioscrobbler_1.0.tar.gz",
repos = NULL, type="source")
install.packages("https://cran.r-project.org/src/contrib/Archive/nutshell/nutshell_2.0.tar.gz",
repos = NULL, type="source")
---
title: 'Aprendizaje Computacional Sesión I. Introducción al lenguaje R'
---
title: 'Aprendizaje Computacional Sesión I. Introducción al lenguaje R'
setwd("D:/OneDrive/Colegio/AC/PracticasAC")
nrow(credit.Datos.Test)
nrow(credit.Datos.Test)
# SCRIPT DE LA PRACTICA DE APRENDIZAJE COMPUTACIONAL 2024-2025
if(!require("caret")) {
install.packages("caret", dependencies = c("Depends", "Suggests"))
require(caret)
}
# Descargamos la base de datos
url <- "https://archive.ics.uci.edu/static/public/27/credit+approval.zip"
download.file(url, destfile = "credit_approval.zip")
# Descomprimimos la base de datos
unzip("credit_approval.zip")
# Cargamos la base de datos
credit <- read.table("crx.data", header = FALSE, sep = ",")  # Ajusta los parámetros según el archivo
# Cargamos en credit.trainIdx la base de datos descargada del UCI
credit.trainIdx <- readRDS("credit.trainIdx.rds")
credit.Datos.Train <- credit[credit.trainIdx,]
credit.Datos.Test <- credit[-credit.trainIdx,]
nrow(credit.Datos.Train)
nrow(credit.Datos.Test)
View(credit.Datos.Train)
View(credit.Datos.Test)
credit$V1 <- as.factor(credit$V1)
credit$V4 <- as.factor(credit$V4)
credit$V5 <- as.factor(credit$V5)
credit$V6 <- as.factor(credit$V6)
credit$V7 <- as.factor(credit$V7)
credit$V9 <- as.factor(credit$V9)
credit$V10 <- as.factor(credit$V10)
credit$V12<- as.factor(credit$V12)
credit$V13 <- as.factor(credit$V13)
credit$V16 <- as.factor(credit$V16)
# SCRIPT DE LA PRACTICA DE APRENDIZAJE COMPUTACIONAL 2024-2025
if(!require("caret")) {
install.packages("caret", dependencies = c("Depends", "Suggests"))
require(caret)
}
# Descargamos la base de datos
url <- "https://archive.ics.uci.edu/static/public/27/credit+approval.zip"
download.file(url, destfile = "credit_approval.zip")
# Descomprimimos la base de datos
unzip("credit_approval.zip")
# Cargamos la base de datos
credit <- read.table("crx.data", header = FALSE, sep = ",")  # Ajusta los parámetros según el archivo
# Cargamos en credit.trainIdx la base de datos descargada del UCI
credit.trainIdx <- readRDS("credit.trainIdx.rds")
credit.Datos.Train <- credit[credit.trainIdx,]
credit.Datos.Test <- credit[-credit.trainIdx,]
# Estos comandos es para comprobar que tiene 553 observaciones
nrow(credit.Datos.Train)
nrow(credit.Datos.Test)
# SCRIPT DE LA PRACTICA DE APRENDIZAJE COMPUTACIONAL 2024-2025
if(!require("caret")) {
install.packages("caret", dependencies = c("Depends", "Suggests"))
require(caret)
}
# Descargamos la base de datos
url <- "https://archive.ics.uci.edu/static/public/27/credit+approval.zip"
download.file(url, destfile = "credit_approval.zip")
# Descomprimimos la base de datos
unzip("credit_approval.zip")
# Cargamos la base de datos
credit <- read.table("crx.data", header = FALSE, sep = ",")  # Ajusta los parámetros según el archivo
# Cargamos en credit.trainIdx la base de datos descargada del UCI
credit.trainIdx <- readRDS("credit.trainIdx.rds")
credit.Datos.Train <- credit[credit.trainIdx,]
credit.Datos.Test <- credit[-credit.trainIdx,]
# Estos comandos es para comprobar que tiene 553 observaciones
nrow(credit.Datos.Train)
nrow(credit.Datos.Test)
str(credit)
# Factorizamos todas las categoricas, antes de arreglar errores:
credit <- data.frame(lapply(credit,FUN=as.factor))
str(credit)
# V1
levels(credit$V1)
# Debemos convertir a NA
credit$V1[credit$V1 == "?"] <- NA
# V1
levels(credit$V1)
# Debemos convertir a NA
credit$V1[credit$V1 == "?"] <- NA
# V1
levels(credit$V1)
# Cargamos la base de datos
credit <- read.table("crx.data", header = FALSE, sep = ",", na.strings ="?")
# Cargamos en credit.trainIdx la base de datos descargada del UCI
credit.trainIdx <- readRDS("credit.trainIdx.rds")
credit.Datos.Train <- credit[credit.trainIdx,]
credit.Datos.Test <- credit[-credit.trainIdx,]
# Estos comandos es para comprobar que tiene 553 observaciones
nrow(credit.Datos.Train)
nrow(credit.Datos.Test)
str(credit)
# Factorizamos todas las categoricas, antes de arreglar errores:
credit <- data.frame(lapply(credit,FUN=as.factor))
str(credit)
# V1
levels(credit$V1)
# Cargamos la base de datos, na.string = "?" quitamos los datos con ese valor
credit <- read.table("crx.data", header = FALSE, sep = ",")
credit <- read.table("crx.data", header = FALSE, sep = ",")
# Cargamos en credit.trainIdx la base de datos descargada del UCI
credit.trainIdx <- readRDS("credit.trainIdx.rds")
credit.Datos.Train <- credit[credit.trainIdx,]
credit.Datos.Test <- credit[-credit.trainIdx,]
# Estos comandos es para comprobar que tiene 553 observaciones
nrow(credit.Datos.Train)
nrow(credit.Datos.Test)
# El resultado que ves al ejecutar summary(credit$V16) sugiere que V16, que debería
# ser la columna de clase con valores + o -, está tratada como un vector de caracteres
# en lugar de una variable categórica o factor en R.
# PREGUNTAAAAAAAAAAAAAAA TEACHER
# credit <- data.frame(lapply(credit, FUN=as.factor))
#Ahora tenemos que comprobar que todos los niveles están correctos
# comparando con lo que tenemos en la web:
# al reemplazar "?" con NA, R sigue considerando "?" como un nivel
# válido a menos que uses droplevels() para actualizar los niveles activos.
str(credit)
# Factorizamos todas las categoricas, antes de arreglar errores:
credit <- data.frame(lapply(credit,FUN=as.factor))
str(credit)
# V1
levels(credit$V1)
# Debemos convertir a NA
credit$V1[credit$V1 == "?"] <- NA
# V1
levels(credit$V1)
# SCRIPT DE LA PRACTICA DE APRENDIZAJE COMPUTACIONAL 2024-2025
if(!require("caret")) {
install.packages("caret", dependencies = c("Depends", "Suggests"))
require(caret)
}
# Descargamos la base de datos
url <- "https://archive.ics.uci.edu/static/public/27/credit+approval.zip"
download.file(url, destfile = "credit_approval.zip")
# Descomprimimos la base de datos
unzip("credit_approval.zip")
# Cargamos la base de datos, na.string = "?" quitamos los datos con ese valor
credit <- read.table("crx.data", header = FALSE, sep = ",", na.strings = "?")
# Cargamos en credit.trainIdx la base de datos descargada del UCI
credit.trainIdx <- readRDS("credit.trainIdx.rds")
credit.Datos.Train <- credit[credit.trainIdx,]
credit.Datos.Test <- credit[-credit.trainIdx,]
# Estos comandos es para comprobar que tiene 553 observaciones
nrow(credit.Datos.Train)
nrow(credit.Datos.Test)
# El resultado que ves al ejecutar summary(credit$V16) sugiere que V16, que debería
# ser la columna de clase con valores + o -, está tratada como un vector de caracteres
# en lugar de una variable categórica o factor en R.
# PREGUNTAAAAAAAAAAAAAAA TEACHER
# credit <- data.frame(lapply(credit, FUN=as.factor))
#Ahora tenemos que comprobar que todos los niveles están correctos
# comparando con lo que tenemos en la web:
# al reemplazar "?" con NA, R sigue considerando "?" como un nivel
# válido a menos que uses droplevels() para actualizar los niveles activos.
str(credit)
# Factorizamos todas las categoricas, antes de arreglar errores:
credit <- data.frame(lapply(credit,FUN=as.factor))
# V1
levels(credit$V1)
# El siguiente con erroes es V2
levels(credit$V2)
str(credit)
# V1
levels(credit$V1)
